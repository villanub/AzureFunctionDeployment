{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appName": {
            "type": "string",
            "metadata": {
                "description": "The name of the function app that you wish to create."
            }
        },
        "appServicePlanType" : {
            "type": "string",
            "defaultValue": "Consumption",
            "allowedValues": [
                "ServicePlan",
                "Consumption"
            ],
            "metadata": {
                "description": "The ServicePlan option creates an App Service Plan and is billed according to that plan. The Consumption option bills according to https://azure.microsoft.com/en-gb/pricing/details/functions/."
            }
        },        
        "appInsightsLocation": {
            "type": "string",
            "defaultValue": "South Central US",
            "allowedValues": [
                "Australia East",
                "Canada Central",
                "Central India",
                "East US",
                "France Central",
                "Japan East",
                "Korea Central",
                "North Europe",
                "South Central US",
                "Southeast Asia",
                "UK South",
                "UK West",
                "West Europe",
                "West US 2"
            ]
        },
        "appInsightsName": {
            "type": "string",
            "defaultValue": "appInsightsInstance"
        },
        "githubRepoURL": {
            "type": "string",
            "defaultValue": "https://github.com/villanub/ASCSplunkFunctionV2.git"
        },
        "githubRepoBranch": {
            "type": "string",
            "defaultValue": "master"
        },
        "eventHubConnectionString": {
            "type": "string",
            "defaultValue": "Endpoint=sb://YOURNAMESPACE.servicebus.windows.net/;SharedAccessKeyName=YOURPOLICYNAME;SharedAccessKey=YOURPOLICYKEY"
        },
        "inputHubNameActivityLogs": {
            "type": "string",
            "defaultValue": "insights-operational-logs"
        },
        "consumerGroupNameActivityLog": {
            "type": "string",
            "defaultValue": "$default"
        },
        "inputHubNameDiagnosticLogs": {
            "type": "string",
            "defaultValue": "insights-logs-diagnostics"
        },
        "inputHubNameSecurityLogs": {
            "type": "string",
            "defaultValue": "security"
        },
        "consumerGroupNameSecurityLog": {
            "type": "string",
            "defaultValue": "security"
        },
        "consumerGroupNameDiagnosticLogs": {
            "type": "string",
            "defaultValue": "$default"
        },
        "inputHubNameMetrics": {
            "type": "string",
            "defaultValue": "insights-metrics-pt1m"
        },
        "consumerGroupNameMetrics": {
            "type": "string",
            "defaultValue": "$default"
        },
        "inputHubNameWAD": {
            "type": "string",
            "defaultValue": "insights-telemetry-wad"
        },
        "consumerGroupNameWAD": {
            "type": "string",
            "defaultValue": "$default"
        },
        "inputHubNameLAD": {
            "type": "string",
            "defaultValue": "insights-telemetry-lad"
        },
        "consumerGroupNameLAD": {
            "type": "string",
            "defaultValue": "$default"
        },
        "inputHubNameFaults": {
            "type": "string",
            "defaultValue": "transmission-faults"
        },
        "splunkToken": {
            "type": "string"
        },
        "splunkAddress": {
            "type": "string"
        },
        "splunkCertThumbprint": {
            "type": "string",
            "defaultValue": ""
        },
        "outputBinding": {
            "type": "string",
            "defaultValue": "hec",
            "metadata": {
                "description": "values are hec, proxy, eventhub"
            }
        },
        "outputHubConnection": {
            "type": "string",
            "defaultValue" :"Endpoint=sb://YOURNAMESPACE.servicebus.windows.net/;SharedAccessKeyName=YOURPOLICYNAME;SharedAccessKey=YOURPOLICYKEY",
            "metadata": {
                "description": "Only used with outputBinding = eventhub, but must be a valid connection string."
            }
        },
        "output-hub-name-proxy": {
            "type": "string",
            "defaultValue": "collector-to-proxy"
        }
    },
    "variables": {
        "alwaysOnAvail0": "[equals(parameters('appServicePlanType'),'ServicePlan')]",
        "alwaysOnAvail1": "[equals(parameters('appServicePlanTier'),'Standard')]",
        "alwaysOnAvail2": "[equals(parameters('appServicePlanTier'),'Basic')]",
        "alwaysOnAvail3": "[equals(parameters('appServicePlanTier'),'Premium')]",
        "alwaysOnAvail4": "[equals(parameters('appServicePlanTier'),'Isolated')]",
        "alwaysOnAvaila": "[or(variables('alwaysOnAvail1'), variables('alwaysOnAvail2'))]",
        "alwaysOnAvailb": "[or(variables('alwaysOnAvail3'), variables('alwaysOnAvail4'))]",
        "alwaysOnAvailc": "[or(variables('alwaysOnAvaila'), variables('alwaysOnAvailb'))]",

        "alwaysOnAvailable": "[and(variables('alwaysOnAvail0'), variables('alwaysOnAvailc'))]",

        "functionAppName": "[parameters('appName')]",
        "ConsumptionName": "[concat('cn-', parameters('appName'))]",
        "hostingPlanName": "[variables(concat(parameters('appServicePlanType'), 'Name'))]",
        "storageAccountName": "[concat('func', uniquestring(resourceGroup().id))]",
        "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2018-07-01",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS"
            },
        },
        {
            "name": "[parameters('appInsightsName')]",
            "type": "Microsoft.Insights/components",
            "apiVersion": "2015-05-01",
            "location": "[parameters('appInsightsLocation')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Flow_Type": "Bluefield",
                "Request_Source": "rest"
            }
        },
        {
            "condition": "[equals(parameters('appServicePlanType'), 'Consumption')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2015-04-01",
            "name": "[variables('ConsumptionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('ConsumptionName')]",
                "computeMode": "Dynamic",
                "sku": "Dynamic"
            }
        },
        {
            "apiVersion": "2016-08-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('functionAppName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "alwaysOn": "[variables('alwaysOnAvailable')]",
                    "appSettings": [
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionAppName'))]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "6.5.0"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "hubConnection",
                            "value": "[parameters('eventHubConnectionString')]"
                        },
                        {
                            "name": "input-hub-name-activity-log",
                            "value": "[parameters('inputHubNameActivityLogs')]"
                        },
                        {
                            "name": "consumer-group-activity-log",
                            "value": "[parameters('consumerGroupNameActivityLog')]"
                        },
                        {
                            "name": "input-hub-name-diagnostic-logs",
                            "value": "[parameters('inputHubNameDiagnosticLogs')]"
                        },
                        {
                            "name": "consumer-group-diagnostic-logs",
                            "value": "[parameters('consumerGroupNameDiagnosticLogs')]"
                        },
                        {
                            "name": "input-hub-name-metrics",
                            "value": "[parameters('inputHubNameMetrics')]"
                        },
                        {
                            "name": "consumer-group-metrics",
                            "value": "[parameters('consumerGroupNameMetrics')]"
                        },
                        {
                            "name": "input-hub-name-wad",
                            "value": "[parameters('inputHubNameWAD')]"
                        },
                        {
                            "name": "consumer-group-wad",
                            "value": "[parameters('consumerGroupNameWAD')]"
                        },
                        {
                            "name": "input-hub-name-lad",
                            "value": "[parameters('inputHubNameLAD')]"
                        },
                        {
                            "name": "consumer-group-lad",
                            "value": "[parameters('consumerGroupNameLAD')]"
                        },
                        {    
                            "name": "consumer-group-security-log",
                            "value": "[parameters('consumerGroupNameSecurityLog')]"
                        },
                        {
                            "name": "input-hub-name-faults",
                            "value": "[parameters('inputHubNameFaults')]"
                        },
                        {
                            "name": "input-hub-name-security-log",
                            "value": "[parameters('inputHubNameSecurityLogs')]"
                        },
                        {
                            "name": "splunkToken",
                            "value": "[parameters('splunkToken')]"
                        },
                        {
                            "name": "splunkAddress",
                            "value": "[parameters('splunkAddress')]"
                        },
                        {
                            "name": "outputBinding",
                            "value": "[parameters('outputBinding')]"
                        },
                        {
                            "name": "splunkCertThumbprint",
                            "value": "[parameters('splunkCertThumbprint')]"
                        },
                        {
                            "name": "outputHubConnection",
                            "value": "[parameters('outputHubConnection')]"
                        },
                        {
                            "name": "output-hub-name-proxy",
                            "value": "[parameters('output-hub-name-proxy')]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "2016-08-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[parameters('githubRepoURL')]",
                        "branch": "[parameters('githubRepoBranch')]",
                        "IsManualIntegration": true
                    }
                }
            ]
        }
    ]
}
